{"version":3,"sources":["components/Navbar.js","components/About.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","dist","to","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","modetext","About","style","Object","objectSpread","myStyle","userSelect","pointerEvents","TextForm","_useState","useState","_useState2","slicedToArray","text","setText","textareaRef","useRef","_useState3","_useState4","copyText","setCopyText","handleOnChange","event","target","value","CountWords","split","filter","element","length","heading","disabled","navigator","clipboard","writeText","current","onChange","ref","rows","btnStyle","newText","toUpperCase","join","App","setMode","setmodetext","_useState5","_useState6","btnText","setBtnText","_useState7","color","backgroundColor","border","_useState8","setMyStyle","_useState9","_useState10","setBtnStyle","document","body","react_router_dist","path","toggleMotitle","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cb3cdde8.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n  return (\n    <>\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n                <Link to='/' className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link to='/about' className=\"nav-link active\" href=\"/\">About Developer</Link>\n            </li>\n            </ul>\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                <input className=\"form-check-input\" type=\"checkbox\" onClick= {props.toggleMode} role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckChecked\"/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">{props.modetext} Dark Mode</label>   \n            </div>\n        </div>\n        </div>\n    </nav>\n    </>\n  )\n}\n\n\nNavbar.propTypes = {\n    title: propTypes.string,\n    aboutText: propTypes.string\n}","import React from 'react'\n\nexport default function About(props) {\n  return (\n    <div className='container pt-2 pb-2' style={{ ...props.myStyle, userSelect: 'none', pointerEvents: 'none' }}>\n      <h2>Name: Bibek Joshi</h2>\n    </div>\n  )\n}\n\n","import React, {useState} from 'react';\nimport { useRef } from 'react';\n\nexport default function TextForm(props) {\n  const [text, setText] = useState('');\n  const textareaRef = useRef(null);\n  const [copyText, setCopyText] = useState(\"Copy Text\")\n\n  const handleUpClick = () =>{\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleOnChange = (event) =>{\n    setText(event.target.value);\n    setCopyText('Copy Text')\n  };\n\n  const handleClearText = () =>{\n    let newText = ''\n    setText(newText)\n  };\n\n  const handleExtraSpaces = () =>{\n    let newText = text.split(/[ ]+/);\n    // let newText = text.split(' ').join(' ')\n    setText(newText.join(\" \"))\n  }\n\n  const handleCopyText = () => {\n    navigator.clipboard.writeText(textareaRef.current.value)\n    \n    // textareaRef.current.select();\n    // document.execCommand(\"copy\");\n\n    if (copyText === \"Copy Text\"){\n      setCopyText(\"Copied!\")\n      // setCopyText('Copy Text')\n    }\n\n  }\n\n\n  const CountWords = ()=>{\n    return text.split(/\\s+/).filter((element)=>{return element.length!==0}).length; \n  }\n\n  return (\n    <div className=\"container pt-3 pb-3\" style={props.myStyle}>\n      <div className='container'>\n          <h1>{props.heading}</h1>\n          <button disabled={text.length===0} className=\"btn btn-dark btn-sm mx-2 my-2\" style={props.myStyle} onClick={handleCopyText} onChange={handleOnChange}>{copyText}</button>\n          <div className=\"mb-3\">\n              <textarea ref={textareaRef} style={props.myStyle} className=\"form-control\" value={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\n          </div>\n          <button disabled={text.length===0} style={props.btnStyle} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button>\n          <button disabled={text.length===0} style={props.btnStyle} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n          <button disabled={text.length===0} style={props.btnStyle} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearText}>Clear</button>\n      </div>\n      <div className=\"container my-3\">\n        <h2>Your Text Summary</h2>\n        <p>{CountWords()} words and {text.length} characters</p>\n        <p>Read Time: {CountWords()/250} Minutes</p>\n      </div>\n    </div>\n  )\n}\n","import './App.css';\nimport Navbar from './components/Navbar';\n// eslint-disable-next-line\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [modetext, setmodetext] = useState('Enable')\n  const [btnText, setBtnText] = useState('Dark Mode');\n\n  const [myStyle, setMyStyle] = useState({\n    color: '#050726',\n    backgroundColor: 'white',\n    border: '1px solid #050726',\n    userSelect: 'none', \n  });\n\n  const [btnStyle, setBtnStyle] = useState({\n    color: 'white',\n    backgroundColor: 'blue',\n    border: '1px solid blue'\n  });\n\n  const toggleMode = () => {\n    if (mode === 'light'){\n      setMode('dark');\n      setmodetext('Disable');\n      document.body.style.backgroundColor = '#050726';\n    }\n    else {\n      setMode('light');\n      setmodetext('Enable')\n      document.body.style.backgroundColor = 'white';\n\n    }\n    if (btnText === 'Dark Mode'){\n      setMyStyle ({\n        color: 'white',\n        backgroundColor: '#050726',\n        border: '1px solid white'\n      })\n      setBtnStyle({\n        backgroundColor: 'green',\n        border: '1px solid green'\n      })\n      setBtnText(\"Light Mode\")\n    }\n    else if(btnText === 'Light Mode'){\n      setMyStyle ({\n        color: '#050726',\n        backgroundColor: 'white',\n        border: '1px solid #050726'\n      })\n      setBtnStyle({\n        color: 'white',\n        backgroundColor: 'blue',\n        border: '1px solid blue'\n      })\n      setBtnText(\"Dark Mode\")\n    }\n  }\n\n  return (\n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} modetext={modetext} toggleMode={toggleMode}/>\n    <div className=\"container my-3\">\n        <Routes>\n          <Route path=\"/\" element={\n            <TextForm \n              heading=\"Enter the text\" \n              toggleMotitle=\"TextUtils\" \n              mode={mode} \n              modetext={modetext} \n              toggleMode={toggleMode} \n              myStyle={myStyle} \n              btnStyle={btnStyle} \n              btnText={btnText} \n            />}>\n          </Route>\n          <Route path=\"/about\" element={\n            <About \n              mode={mode} \n              myStyle={myStyle} \n            />}>\n          </Route>\n        </Routes>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}